plugins {
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web' // ✅ 내장 Tomcat 포함 (JAR 실행용)
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper' // ✅ JSP 지원
	implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api'
	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl'
	implementation 'org.jsoup:jsoup:1.15.4'
	implementation 'org.json:json:20231013'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

bootJar {
	enabled = true  // ✅ JAR 파일 생성 활성화 (기본값)
	mainClass = 'com.example.YourMainClass' // ✅ 실행할 Main 클래스 지정
}


tasks.withType(Jar).configureEach {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE  // ✅ 중복 파일 오류 방지
}
